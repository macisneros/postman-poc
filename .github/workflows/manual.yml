name: Run Postman Tests

on:
  push:
    branches:
      - main
  pull_request_target:
    branches:
      - main
  workflow_dispatch:  # Permite ejecutarlo manualmente desde GitHub

jobs:
  postman-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        collection_id: 
          - "ada46968-73f0-4c27-ba1f-e5022ef1de1c"

    steps:
      - name: Instalar Postman CLI
        run: curl -o- https://dl-cli.pstmn.io/install/linux64.sh | sh

      - name: Obtener todas las colecciones de Postman
        id: get_collections
        run: |
          API_KEY="PMAK-67d3651b7dc2730001805eff-dfc938e9fff7540d831de3bec4259f0e63"
          COLLECTIONS_JSON=$(curl --silent --request GET \
            --url "https://api.getpostman.com/collections?workspace=487ad635-93e0-4c25-b39e-20c6db7908b0" \
            --header "X-Api-Key: $API_KEY")

          echo "$COLLECTIONS_JSON" | jq -r '.collections[] | select(.name | test("^(Auto|Monitor)")) | .uid' > collections.txt

          echo "Colecciones filtradas:"
          cat collections.txt

      - name: Autenticarse con Postman API
        run: postman login --with-api-key PMAK-67d3651b7dc2730001805eff-dfc938e9fff7540d831de3bec4259f0e63

      - name: Ejecutar pruebas con Postman CLI
        id: run_tests
        continue-on-error: true
        run: |
          ENVIRONMENT_ID="19150850-c63c8089-ea3f-4b19-ac50-57ace60da05a"
          
          while IFS= read -r collection_id; do
            echo "Ejecutando pruebas para la colecci√≥n: $collection_id"
            postman collection run "$collection_id" --environment "$ENVIRONMENT_ID" --reporters junit --reporter-junit-export "report-${collection_id}.xml"
          done < collections.txt

      - name: Publicar Reporte de Pruebas
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: "report-*.xml"
